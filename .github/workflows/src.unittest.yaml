name: SRC UnitTest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
  schedule:
    - cron: '8 0 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  files-changed:
    name: Determine Files Changed
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.path-filter.outputs.files }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Path Filter
        id: path-filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            files:
              - .github/workflows/src.unittest.yaml
              - main.py
              - src/**
              - tests/**
              - contract/**
              - requirements/**

  unittest:
    needs: files-changed
    if: ${{ needs.files-changed.outputs.files == 'true' || github.event_name == 'schedule' }}
    name: Source UnitTest
    runs-on: ubuntu-latest
    env:
      ETH_NODE_RPC_URL: ${{ secrets.ETH_NODE_RPC_URL }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 19.x
          cache: 'npm'
          cache-dependency-path: contract/package-lock.json

      - name: Install dependencies
        working-directory: contract
        run: npm install

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
          cache: 'pip'
          cache-dependency-path: |
            requirements/test.txt
            requirements/runtime.txt

      - name: Install dependencies
        run: |
          pip install -r requirements/test.txt
          pip install -r requirements/runtime.txt

      - name: Cache hardhat node
        uses: actions/cache@v3
        with:
          path: contract/cache
          key: hardhat-node

#      - name: Run UnitTest
#        uses: nick-fields/retry@v2
#        with:
#          max_attempts: 3
#          timeout_seconds: 600
#          retry_on: error
#          command: python -m pytest -s --cov=src --cov-report=xml tests

#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v4.0.2
#        with:
#          verbose: true
#        env:
#          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
